name: bench
on:
  push:
    branches:
      - main
  pull_request:
concurrency:
  group: bench-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
env:
  GUILE_AUTO_COMPILE: 0
jobs:
  command_time:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-15
        options:
          -
          - -f i63
          - -f f62
        exclude:
          - os: ${{ github.ref == 'refs/heads/main' && 'none' || 'macos-15' }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: tools/bench.sh ${{ matrix.options }}
      - uses: actions/upload-artifact@v4
        with:
          name: time ${{ matrix.os }} ${{ matrix.options }}
          path: tmp/bench/time
  command_memory:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: tools/memory_bench.sh
      - uses: actions/upload-artifact@v4
        with:
          name: memory
          path: tmp/bench/memory
  rust:
    strategy:
      fail-fast: false
      matrix:
        options:
          -
          - --features float62
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: cargo bench ${{ matrix.options }}
  codspeed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: cargo install --features vendored-openssl cargo-codspeed
      - run: cargo codspeed build
      - uses: codspeedhq/action@v3
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
  binary_size:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: tools/binary_size_bench.sh
  bytecode_size:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: tools/bytecode_size_bench.sh
  loc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: tools/rust_loc_bench.sh
  r7rs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
          - Chibi
          - MIT
          - Stak
          - TR7
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/actions/setup
      - uses: ./.github/actions/setup-scheme
      - run: cargo install --path root
      - run: rm results.*
        working-directory: r7rs-benchmarks
      - run: make $(echo ${{ matrix.name }} | tr '[:upper:]' '[:lower:]')
        env:
          CPU_LIMIT: 3600
        working-directory: r7rs-benchmarks
      - run: cat results.${{ matrix.name }}
        working-directory: r7rs-benchmarks
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}_benchmark
          path: r7rs-benchmarks/results.${{ matrix.name }}
  bench:
    needs:
      - command_time
      - command_memory
      - rust
      - binary_size
      - bytecode_size
      - loc
    if: always()
    runs-on: ubuntu-latest
    steps:
      - run: for result in ${{ join(needs.*.result, ' ') }}; do [ $result = success ]; done
